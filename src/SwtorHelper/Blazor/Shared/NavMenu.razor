@inject NavigationManager NavigationManager

<h1 class="head">Menu</h1>
<ul>
    <li>
        <FluentAnchor Href="/" Appearance=@SetAppearance("/")>GUI Settings</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="/profiles" Appearance=@SetAppearance("/profiles")>GUI Profiles</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="/combatlogs" Appearance=@SetAppearance("/combatlogs")>Combat Logs</FluentAnchor>
    </li>
    <li>
        <FluentAnchor Href="/logmonitor" Appearance=@SetAppearance("/logmonitor")>Log Monitor</FluentAnchor>
    </li>
     <li>
            <FluentAnchor Href="/tracker" Appearance=@SetAppearance("/tracker")>Character tracker</FluentAnchor>
     </li>
</ul>

@code {
    private string? target;

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += LocationChanged;
        base.OnInitialized();
    }

    private void LocationChanged(object? sender, LocationChangedEventArgs e)
    {
        Uri uri = new Uri(e.Location);
        if (uri.Segments.Count() > 1)
            target = uri.Segments[1];
        else
            target = "";
        StateHasChanged();
    }

    private Appearance SetAppearance(string location) => (string.Equals(location, target, StringComparison.OrdinalIgnoreCase)) ? Appearance.Neutral : Appearance.Stealth;

}